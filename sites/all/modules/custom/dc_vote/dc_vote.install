<?php

function dc_vote_install() {
  // get the translation function relevant to our current localisation
  $t = get_t();
  // define the content type as an array (same as in hook_node_info())
  $dc_vote = array(
    'type' => 'dc_vote',
    'name' => $t('Vote'),
    'base' => 'node_content',
    'description' => $t('Content type to handle dc votes.'),
    'title_label' => $t('Title'),  
    'promote' => 0,
    'status' => 1,
    'comment' => 0,
  );

  // set default values for anything not explicitly defined in the above array
  $content_type = node_type_set_defaults($dc_vote);

  // add the body field to the content type
  //node_add_body_field($content_type, 'Body');

  // create the content type
  node_type_save($content_type);

  variable_set('node_options_dc_vote', array('status'));
  // hide comments for this node. 
  variable_set('comment_dc_vote', 'COMMENT_NODE_CLOSED');

  // Hide date and author information
  variable_set('node_submitted_dc_vote', FALSE);

  // Create all the fields we are adding to our content type.
  foreach (_dc_vote_installed_fields() as $field) {
    field_create_field($field);
  }

  // Create all the instances for our fields.
  foreach (_dc_vote_installed_instances() as $instance) {
    $instance['entity_type'] = 'node';
    $instance['bundle'] = 'dc_vote';
    field_create_instance($instance);
  }

  // adjust the weight so it's called after a dependant module called 'categories'
  $weight = db_query("SELECT weight FROM {system} WHERE name = :name", array(':name' => 'categories'))->fetchField();
  db_update('system')->fields(array(
    'weight' => $weight + 1,
  ))
  ->condition('name', 'dc_vote')
  ->execute();
//  
//  $product_type = commerce_product_ui_product_type_new();
//
//  $product_type['type'] = 'gift_vouchers';
//  $product_type['name'] = t('Gift Vouchers');
//  $product_type['description'] = t('Product type for gift vouchers.');
//  $product_type['is_new'] = TRUE;
//
//  commerce_product_ui_product_type_save($product_type, FALSE);
//  
//  return "creation ok";
}


function _dc_vote_installed_fields() {
  $t = get_t();
  $fields = array(
    // text field
      'receiver_user_id_vote' => array(
        'field_name'   => 'receiver_user_id_vote',
        'label'        => $t('Receiver User Id'),
        'type'         => 'text',
        'module' => 'text',
      ),
      'wishlist_id_vote' => array(
        'field_name'   => 'wishlist_id_vote',
        'label'        => $t('Receiver Wishlist Id'),
        'type'         => 'text',
        'module' => 'text',
      ), 
      'user_ip_vote' => array(
        'field_name'   => 'user_ip_vote',
        'label'        => $t('IP address of user'),
        'type'         => 'text',
        'module' => 'text',
      ),      
      

  );
  return $fields;
}


function _dc_vote_installed_instances() {
  $t = get_t();
  $instances = array(
 // instance of the select amount field      
    'receiver_user_id_vote' => array(
        'field_name' => 'receiver_user_id_vote',
        'label' => $t('Receiver User Id'),
        'cardinality' => 1,
        'widget' => array(
            'weight' => '1',
            'type' => 'text_textfield',            
        ),
    ),
      
    'wishlist_id_vote' => array(
        'field_name' => 'wishlist_id_vote',
        'label' => $t('Receiver Wishlist Id'),
        'cardinality' => 1,
        'widget' => array(
            'weight' => '1',
            'type' => 'text_textfield',        
        ),
    ),  
    'user_ip_vote' => array(
        'field_name' => 'user_ip_vote',
        'label' => $t('IP address of user'),
        'cardinality' => 1,
        'widget' => array(
            'weight' => '1',
            'type' => 'text_textfield',        
        ),
    ), 
      
  );
  return $instances;
}

function dc_vote_uninstall() {
  // Gather all the example content that might have been created while this
  // module was enabled.  Simple selects still use db_query().
  $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
  $result = db_query($sql, array(':type' => 'dc_vote'));
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }

  // Delete all the nodes at once
  node_delete_multiple($nids);


  // Loop over each of the fields defined by this module and delete
  // all instances of the field, their data, and the field itself.
  foreach (array_keys(_dc_vote_installed_fields()) as $field) {
    field_delete_field($field);
  }
  // delete any remaining field instances attached to this content type
    $instances = field_info_instances('node', 'dc_vote');
  foreach ($instances as $instance_name => $instance) {
    field_delete_instance($instance);
  }
  // Delete our content type
  node_type_delete('dc_vote');

  // Purge all field information

  field_purge_batch(1000);
}


?>