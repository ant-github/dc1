<?php

/**
 * Implements hook_schema().
 */
function hd_entities_schema() {
  $schema = array();

  $schema['wishlist'] = array(
    'description' => 'The base table for wishlist entities.',
    'fields' => array(
      'wishlist_id' => array(
        'description' => 'Primary Key: Identifier for a wishlist.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'language' => array(
        'description' => 'The language of the wishlist.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'name' => array(
        'description' => 'The name of the wishlist - a human-readable identifier.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'uid' => array(
        'description' => 'The uid of the user the wishlist belongs to.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the wishlist was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the wishlist was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'data' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of additional data.',
      ),
    ),
    'primary key' => array('wishlist_id'),
  );

 $schema['wishlist_item'] = array(
    'description' => 'The base table for wishlist item entities.',
    'fields' => array(
      'wishlist_item_id' => array(
        'description' => 'Primary Key: Identifier for a wishlist item.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'language' => array(
        'description' => 'The language of the wishlist item.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'uid' => array(
        'description' => 'The uid of the user the wishlist item belongs to.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the wishlist item was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the wishlist item was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'data' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of additional data.',
      ),
    ),
    'primary key' => array('wishlist_item_id'),
  );

  // $schema['product'] = array(
  //   'description' => 'The base table for product entities.',
  //   'fields' => array(
  //     'product_id' => array(
  //       'description' => 'Primary Key: Identifier for a product.',
  //       'type' => 'serial',
  //       'unsigned' => TRUE,
  //       'not null' => TRUE,
  //     ),
  //     'language' => array(
  //       'description' => 'The language of the product.',
  //       'type' => 'varchar',
  //       'length' => 32,
  //       'not null' => TRUE,
  //       'default' => '',
  //     ),
  //     'name' => array(
  //       'description' => 'The name of the product - a human-readable identifier.',
  //       'type' => 'varchar',
  //       'length' => 255,
  //       'not null' => TRUE,
  //       'default' => '',
  //     ),
  //     'created' => array(
  //       'description' => 'The Unix timestamp when the product was created.',
  //       'type' => 'int',
  //       'not null' => TRUE,
  //       'default' => 0,
  //     ),
  //     'changed' => array(
  //       'description' => 'The Unix timestamp when the product was most recently saved.',
  //       'type' => 'int',
  //       'not null' => TRUE,
  //       'default' => 0,
  //     ),
  //     'data' => array(
  //       'type' => 'blob',
  //       'not null' => FALSE,
  //       'size' => 'big',
  //       'serialize' => TRUE,
  //       'description' => 'A serialized array of additional data.',
  //     ),
  //   ),
  //   'primary key' => array('product_id'),
  // );

  $schema['store'] = array(
    'description' => 'The base table for store entities.',
    'fields' => array(
      'store_id' => array(
        'description' => 'Primary Key: Identifier for a store.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'language' => array(
        'description' => 'The language of the store.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'name' => array(
        'description' => 'The name of the store - a human-readable identifier.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the store was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the store was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'data' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of additional data.',
      ),
    ),
    'primary key' => array('store_id'),
  );

  $schema['purchase'] = array(
    'description' => 'The base table for purchase entities.',
    'fields' => array(
      'purchase_id' => array(
        'description' => 'Primary Key: Identifier for a purchase.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'language' => array(
        'description' => 'The language of the purchase.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'uid' => array(
        'description' => 'The uid of the user the purchase belongs to.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the purchase was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the purchase was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'data' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of additional data.',
      ),
    ),
    'primary key' => array('purchase_id'),
  );

  return $schema;
}


/*
 * Implements hook_uninstall().
 *
 * At uninstall time we'll notify field.module that the entity was deleted
 * so that attached fields can be cleaned up.
 */
function hd_entities_uninstall() {
  field_attach_delete_bundle('wishlist', 'wishlist');
  field_attach_delete_bundle('wishlist_item', 'wishlist_item');
  //field_attach_delete_bundle('product', 'product');
  field_attach_delete_bundle('store', 'store');
  field_attach_delete_bundle('purchase', 'purchase');
}
